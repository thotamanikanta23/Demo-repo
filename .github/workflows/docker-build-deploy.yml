name: Docker Build & Deploy NodeJS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        id: build
        run: |
          docker build -t my-node-app:${{ github.sha }} .

      - name: Run tests in Docker container
        run: |
          docker run --rm my-node-app:${{ github.sha }} npm test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image for production
        id: build_prod
        run: |
          docker build -t my-node-app:prod .

      - name: Tag Docker image with commit SHA
        run: |
          docker tag my-node-app:prod ${{ secrets.DOCKER_USERNAME }}/my-node-app:${{ github.sha }}
      
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/my-node-app:${{ github.sha }}

      - name: Deploy Docker image to Production Server
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@13.127.69.68 'docker pull ${{ secrets.DOCKER_USERNAME }}/my-node-app:${{ github.sha }} && docker run -d -p 80:80 ${{ secrets.DOCKER_USERNAME }}/my-node-app:${{ github.sha }}'

