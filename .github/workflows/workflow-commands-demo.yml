name: Workflow Commands Demo

on:
  push:
    branches:
      - main

jobs:
  demo-job:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Set an environment variable
      - name: Set Environment Variable
        run: echo "MY_ENV_VAR=Hello Manikanta" >> $GITHUB_ENV

      # 3Ô∏è‚É£ Set an output variable
      - name: Set Output Variable
        id: output_step
        run: echo "MY_OUTPUT_VAR=This is an output variable" >> $GITHUB_OUTPUT

      # 4Ô∏è‚É£ Mask a secret (to hide sensitive information in logs)
      - name: Mask Secret
        run: echo "::add-mask::SuperSecretPassword"

      # 5Ô∏è‚É£ Group logs for better readability
      - name: Group Logs
        run: |
          echo "::group::Installing Dependencies"
          echo "Installing package 1..."
          echo "Installing package 2..."
          echo "Installing package 3..."
          echo "::endgroup::"

      # 6Ô∏è‚É£ Debug log message
      - name: Debug Message
        run: echo "::debug::This is a debug log message"

      # 7Ô∏è‚É£ Warning, Notice and error messages
      - name: Display Warning and Error
        run: |
          echo "::warning::This is a warning message"
          echo "::notice::This is a notice message"
          echo "::error::This is an error message"

      # 8Ô∏è‚É£ Stop execution if an error occurs
      - name: Fail on Error
        run: |
          echo "::error::Something went wrong!"
          exit 1
        continue-on-error: true  # Allows workflow to continue even if this step fails

      # 9Ô∏è‚É£ Add a custom directory to PATH
      - name: Add to PATH
        run: echo "/custom/bin" >> $GITHUB_PATH

      # üîü Print all environment variables
      - name: Show Environment Variables
        run: env

      # 1Ô∏è‚É£1Ô∏è‚É£ Upload an artifact (example file)
      - name: Create and Upload Artifact
        run: echo "Hello, this is an artifact!" > sample_artifact.txt

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: sample_artifact.txt

      # 1Ô∏è‚É£2Ô∏è‚É£ Use the Output Variable from Previous Step
      - name: Use Output Variable
        run: echo "The output variable is '${{ steps.output_step.outputs.MY_OUTPUT_VAR }}'"



